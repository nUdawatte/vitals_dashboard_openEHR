var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { css, html, property, query, state } from 'lit-element';
import '@shoelace-style/shoelace/dist/components/input/input';
import '@shoelace-style/shoelace/dist/components/menu/menu';
import '@shoelace-style/shoelace/dist/components/select/select';
import '@shoelace-style/shoelace/dist/components/icon/icon';
import '@shoelace-style/shoelace/dist/components/menu-item/menu-item';
import '@shoelace-style/shoelace/dist/components/icon-button/icon-button';
import { ifDefined } from 'lit-html/directives/if-defined';
import EhrElement from '../EhrElement';
export default class QuantityLike extends EhrElement {
    constructor() {
        super(...arguments);
        this.required = false;
        this.min = 0;
        this.hideunit = false;
        this.hoist = false;
        this.placeholder = '';
        this.id = '';
        this.hideicon = false;
        this.enablesingleunit = false;
        this.units = [];
    }
    handleChildChange() {
        this.units = [...this.querySelectorAll('mb-unit')];
    }
    reportValidity() {
        var _a;
        const input = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('sl-input');
        return input.reportValidity();
    }
    connectedCallback() {
        super.connectedCallback();
        const observer = new MutationObserver(() => {
            this.handleChildChange();
        });
        observer.observe(this, { attributes: true, childList: true });
    }
    _disabled() {
        return (this.disabled || (this.enablesingleunit ? false : this.units.length === 1));
    }
    handleInput() {
        const magnitude = this.inputElement.value
            ? Number.parseFloat(this.inputElement.value)
            : undefined;
        const unit = this.selectElement.value || this.default;
        if (magnitude == null) {
            this.data = undefined;
        }
        else {
            this.data = {
                unit,
                magnitude,
            };
        }
        const Unit = this.units.filter(un => un.unit === this.selectElement.value)[0];
        this.max = (Unit === null || Unit === void 0 ? void 0 : Unit.max) ? Unit.max : null;
        this.min = (Unit === null || Unit === void 0 ? void 0 : Unit.min) ? Unit.min : null;
        this._mbInput.emit();
    }
    get displayUnit() {
        var _a, _b;
        if ((_a = this.data) === null || _a === void 0 ? void 0 : _a.unit) {
            return (_b = this.data) === null || _b === void 0 ? void 0 : _b.unit;
        }
        if (this.default) {
            return this.default;
        }
        return '';
    }
    render() {
        var _a, _b, _c, _d, _e, _f;
        if (this.variant === 'text') {
            return html `<div>
        ${this._label()}
        <div style="display:flex;gap:0 8px">
          <p>${((_a = this.data) === null || _a === void 0 ? void 0 : _a.magnitude) || '-'}</p>
          <p>${((_b = this.data) === null || _b === void 0 ? void 0 : _b.unit) || '-'}</p>
        </div>
      </div>`;
        }
        return html `
      <sl-input
        id=${`${this.id}-magnitude`}
        class=${this.hideunit ? '' : 'margin-xs'}
        .size=${this.variant === 'small' ? 'small' : 'medium'}
        .disabled=${this.disabled}
        .step=${(_c = this.step) !== null && _c !== void 0 ? _c : 'any'}
        .required=${this.required}
        .max=${this.max}
        .min=${this.min}
        label=${ifDefined(this.label)}
        type="number"
        @sl-input=${this.handleInput}
        .value=${((_e = (_d = this.data) === null || _d === void 0 ? void 0 : _d.magnitude) === null || _e === void 0 ? void 0 : _e.toString()) || ''}
        placeholder=${this.placeholder}
      ></sl-input>
      <sl-select
        id=${`${this.id}-unit`}
        .disabled=${this._disabled()}
        class="${this._disabled() || this.hideicon ? 'no-icon' : ''}"
        style="${this.hideunit ? 'display: none' : ''}"
        placeholder="Select units"
        .hoist=${this.hoist}
        .value=${this.displayUnit}
        .size=${this.variant === 'small' ? 'small' : 'medium'}
        @sl-change=${this.handleInput}
      >
        ${this.units.map(unit => html `<sl-menu-item
              value=${unit.unit}
              id=${`${this.id}-unit-${unit.unit}`}
              max=${unit.max}
              min=${unit.min}
              >${unit.label}</sl-menu-item
            >`)}
      </sl-select>
      <slot style="display: none" @slotchange=${this.handleChildChange}></slot>
      <p class="print-only">${((_f = this.data) === null || _f === void 0 ? void 0 : _f.magnitude) || '-'}</p>
    `;
    }
}
QuantityLike.styles = css `
    .no-icon::part(icon) {
      display: none;
    }

    :host {
      display: flex;
      flex: 1;
      align-items: flex-end;
    }

    sl-input {
      width: 0;
      flex: 3 1 auto;
      min-width: 75px;
    }

    .margin-xs {
      margin-right: var(--sl-spacing-x-small);
    }

    sl-select {
      flex: 1 1 auto;
      width: 0;
      min-width: 100px;
    }
    .print-only {
      display: none;
    }

    @media print {
      .print-only {
        display: inline-block;
        margin: 0px;
        padding: 2px;
      }

      sl-input {
        display: none;
      }
      sl-select {
        display: none;
      }
    }

    sl-input::part(input) {
      margin-right: -14px;
      -webkit-appearance: none;
      -moz-appearance: textfield;
    }
  `;
__decorate([
    property({ type: String, reflect: true })
], QuantityLike.prototype, "default", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], QuantityLike.prototype, "required", void 0);
__decorate([
    property({ type: Number, reflect: true })
], QuantityLike.prototype, "max", void 0);
__decorate([
    property({ type: Number, reflect: true })
], QuantityLike.prototype, "min", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], QuantityLike.prototype, "hideunit", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], QuantityLike.prototype, "hoist", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], QuantityLike.prototype, "disabled", void 0);
__decorate([
    property({ type: Number, reflect: true })
], QuantityLike.prototype, "step", void 0);
__decorate([
    property({ type: String, reflect: true })
], QuantityLike.prototype, "placeholder", void 0);
__decorate([
    property({ type: String, reflect: true })
], QuantityLike.prototype, "id", void 0);
__decorate([
    property({ type: Boolean })
], QuantityLike.prototype, "hideicon", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], QuantityLike.prototype, "enablesingleunit", void 0);
__decorate([
    state()
], QuantityLike.prototype, "units", void 0);
__decorate([
    query('sl-input')
], QuantityLike.prototype, "inputElement", void 0);
__decorate([
    query('sl-select')
], QuantityLike.prototype, "selectElement", void 0);
