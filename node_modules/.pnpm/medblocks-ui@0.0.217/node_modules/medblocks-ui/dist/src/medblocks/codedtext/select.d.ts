import type MbOption from './option';
import { CodedTextElement, type CodedText } from './CodedTextElement';
import '@shoelace-style/shoelace/dist/components/menu/menu';
import '@shoelace-style/shoelace/dist/components/select/select';
import '@shoelace-style/shoelace/dist/components/icon/icon';
import '@shoelace-style/shoelace/dist/components/menu-item/menu-item';
import '@shoelace-style/shoelace/dist/components/icon-button/icon-button';
export default class MbSelect extends CodedTextElement {
    terminology: string;
    data: CodedText | CodedText[] | undefined;
    placeholder: string;
    id: string;
    multiple: boolean;
    required: boolean;
    hoist: boolean;
    disabled: boolean;
    nonclearable: boolean;
    _options: MbOption[];
    getLabel(code: string): string;
    getOrdinal(code: string): number | undefined;
    get _optionElements(): NodeListOf<MbOption>;
    handleInput(e: CustomEvent): void;
    connectedCallback(): void;
    handleChildChange(): void;
    getValue(data: CodedText | CodedText[] | undefined): string | string[];
    reportValidity(): boolean;
    getTextData(data: CodedText | CodedText[] | undefined): string;
    render(): import("lit-element").TemplateResult;
}
