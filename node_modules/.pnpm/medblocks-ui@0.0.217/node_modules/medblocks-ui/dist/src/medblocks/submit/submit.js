var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { customElement, html, LitElement } from 'lit-element';
import { event } from '../../internal/decorators';
let MbSubmit = class MbSubmit extends LitElement {
    handleClick() {
        this.submit.emit();
    }
    connectedCallback() {
        super.connectedCallback();
        this.addEventListener('click', this.handleClick);
    }
    disconnectedCallback() {
        this.removeEventListener('click', this.handleClick);
    }
    render() {
        return html ` <slot></slot> `;
    }
};
__decorate([
    event('mb-trigger-submit')
], MbSubmit.prototype, "submit", void 0);
MbSubmit = __decorate([
    customElement('mb-submit')
], MbSubmit);
export default MbSubmit;
