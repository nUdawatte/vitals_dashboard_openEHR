var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import '@shoelace-style/shoelace/dist/components/checkbox/checkbox';
import { customElement, html, property } from 'lit-element';
import EhrElement from '../EhrElement';
let MbCheckBox = class MbCheckBox extends EhrElement {
    constructor() {
        super(...arguments);
        this.data = undefined;
        this.bind = undefined;
        this.disabled = false;
    }
    _handleChange(e) {
        const checkbox = e.target;
        this.data = checkbox.checked ? this.bind : undefined;
        this._mbInput.emit();
    }
    render() {
        if (this.variant === 'text') {
            return html `<div>
        ${this._label()}
        <p>${this.data || '-'}</p>
      </div>`;
        }
        return html `<sl-checkbox
      .size=${this.variant === 'small' ? 'small' : 'medium'}
      ?disabled=${this.disabled}
      ?checked=${!!this.data}
      @sl-change=${this._handleChange}
      >${this.label}</sl-checkbox
    >`;
    }
};
__decorate([
    property()
], MbCheckBox.prototype, "data", void 0);
__decorate([
    property()
], MbCheckBox.prototype, "bind", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], MbCheckBox.prototype, "disabled", void 0);
MbCheckBox = __decorate([
    customElement('mb-checkbox-any')
], MbCheckBox);
export default MbCheckBox;
