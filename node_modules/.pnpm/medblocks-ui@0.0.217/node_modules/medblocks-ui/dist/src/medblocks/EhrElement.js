var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement, property } from 'lit-element';
import { event, watch } from '../internal/decorators';
export default class EhrElement extends LitElement {
    constructor() {
        super(...arguments);
        this.variant = 'normal';
        this.isMbElement = true;
    }
    reportValidity() {
        return true;
    }
    handlePathChange(oldPath, newPath) {
        this._pathChangeHandler.emit({ detail: { oldPath, newPath } });
    }
    connectedCallback() {
        super.connectedCallback();
        this._mbConnect.emit({ detail: this.path });
        this._mbInput.emit();
    }
    disconnectedCallback() {
        if (this.mbForm) {
            this.mbForm.mbElementSet.delete(this);
            this.mbForm.triggerInput();
        }
        super.disconnectedCallback();
    }
    _label() {
        if (this.label)
            return html `<p style="font-weight: 600;">${this.label}</p>`;
        return undefined;
    }
}
__decorate([
    property({ type: String, reflect: true })
], EhrElement.prototype, "path", void 0);
__decorate([
    property({ type: String, reflect: true })
], EhrElement.prototype, "label", void 0);
__decorate([
    property({ type: String, reflect: true })
], EhrElement.prototype, "repeatprefix", void 0);
__decorate([
    property({ type: String, reflect: true })
], EhrElement.prototype, "repeatsuffix", void 0);
__decorate([
    property({ type: String, reflect: true })
], EhrElement.prototype, "variant", void 0);
__decorate([
    property({ type: Function })
], EhrElement.prototype, "handleSearch", void 0);
__decorate([
    property({ type: String, reflect: true })
], EhrElement.prototype, "datatype", void 0);
__decorate([
    event('mb-input')
], EhrElement.prototype, "_mbInput", void 0);
__decorate([
    event('mb-dependency')
], EhrElement.prototype, "_mbDependency", void 0);
__decorate([
    event('mb-path-change')
], EhrElement.prototype, "_pathChangeHandler", void 0);
__decorate([
    event('mb-connect')
], EhrElement.prototype, "_mbConnect", void 0);
__decorate([
    event('mb-disconnect')
], EhrElement.prototype, "_mbDisconnect", void 0);
__decorate([
    watch('path')
], EhrElement.prototype, "handlePathChange", null);
